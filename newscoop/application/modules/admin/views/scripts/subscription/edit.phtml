<?php 
$translator = \Zend_Registry::get('container')->getService('translator');
$this->placeholder('title')->set($translator->trans('Subscription sections', array(), 'user_subscriptions')); 
?>
<header>
    <h1><?php echo $translator->trans('Subscriptions'); ?></h1>
    <a class="btn prime" href="<?php echo $this->url(array('controller' => 'subscription', 'action' => 'index', 'subscription' => null, 'user' => $this->subscriber)); ?>"><?php echo $translator->trans('Done'); ?></a>
</header>

<section>
    <div id="app"></div>
</section>


<script type="text/template" id="table-view-template">
<a href="#section/new"><?php echo $translator->trans('Add section', array(), 'user_subscriptions'); ?></a> | <a href="#sections"><?php echo $translator->trans('Edit all sections', array(), 'user_subscriptions'); ?></a>

<table id="sections">
<thead>
    <tr>
        <th><?php echo $translator->trans('Section'); ?></th>
        <th><?php echo $translator->trans('Language'); ?></th>
        <th><?php echo $translator->trans('Start Date', array(), 'user_subscriptions'); ?><br /><small>(yyyy-mm-dd)</small></th>
        <th><?php echo $translator->trans('Days', array(), 'user_subscriptions'); ?></th>
        <th><?php echo $translator->trans('Paid days', array(), 'user_subscriptions'); ?></th>
        <th>&nbsp;</th>
    </tr>
</thead>
<tbody></tbody></table>
</script>

<script type="text/template" id="section-row-template">
<td><%= section.name %></td>
<td><%= language ? language.name : <?php echo json_encode($translator->trans('Any', array(), 'user_subscriptions')); ?> %></td>
<td><input type="text" name="startDate" class="start-date" value="<%= startDate %>" /></td>
<td><input type="number" name="days" class="days" min="1" value="<%= days %>" /></td>
<td><input type="number" name="paidDays" class="paid-days" min="0" value="<%= paidDays %>" /></td>
<td><button class="delete"><?php echo $translator->trans('Delete'); ?></button></td>
</script>

<script type="text/template" id="edit-view-template">
<dl class="zend_form">
    <dt><label for="language_set"><?php echo $translator->trans('Languages:'); ?></dt>
    <dd><select id="language_set" name="language_set">
        <option value="select"><?php echo $translator->trans('Individual languages', array(), 'user_subscriptions'); ?></option>
        <option value="all"><?php echo $translator->trans('Regardless of the language', array(), 'user_subscriptions'); ?></option>
    </select></dd>
    
    <dt><label for="sections"><?php echo $translator->trans('Sections:', array(), 'user_subscriptions'); ?></dt>
    <dd><select id="sections" name="sections" multiple size="5"></select></dd>

    <dt><label for="start"><?php echo $translator->trans('Start:', array(), 'user_subscriptions'); ?></dt>
    <dd><input type="date" id="start" name="start" value="<?php echo date('Y-m-d'); ?>" /></dd>

    <dt><label for="days"><?php echo $translator->trans('Days:', array(), 'user_subscriptions'); ?></dt>
    <dd><input type="number" min="1" name="days" id="days" /></dd>

    <dt></dt>
    <dd><button class="save"><?php echo $translator->trans('Save'); ?></button> <button class="cancel"><?php echo $translator->trans('Cancel'); ?></button></dd>
</dl>
</script>

<script type="text/template" id="edit-all-view-template">
<dl class="zend_form">
    <dt><label for="start-date"><?php echo $translator->trans('Start:', array(), 'user_subscriptions'); ?></dt>
    <dd><input type="date" id="start-date" name="start" value="<?php echo date('Y-m-d'); ?>" /></dd>

    <dt><label for="days"><?php echo $translator->trans('Days:', array(), 'user_subscriptions'); ?></dt>
    <dd><input type="number" min="1" name="days" id="days" /></dd>

    <dt><label for="paid-days"><?php echo $translator->trans('Paid Days:', array(), 'user_subscriptions'); ?></dt>
    <dd><input type="number" min="1" name="paidDays" id="paid-days" /></dd>

    <dt></dt>
    <dd><button class="save"><?php echo $translator->trans('Save'); ?></button> <button class="cancel"><?php echo $translator->trans('Cancel'); ?></button></dd>
</dl>
</script>

<div id="app">
</div>

<script type="text/javascript">
(function($) {
    /**
     * Section model
     */
    var Section = Backbone.Model.extend({
    });

    /**
     * Section collection
     */
    var SectionCollection = Backbone.Collection.extend({
        model: Section,

        availableSections: function(subscribedSections, language_set) {
            var available = [];
            this.each(function(section) {
                if (subscribedSections.where({section_number: section.get('number'), language_id: null}).length) { // contains section for any language
                    return;
                }

                if (language_set == 'select' && subscribedSections.where({section_number: section.get('number'), language_id: section.get('language').id}).length) {
                    return;
                }

                available.push(section);
            });

            return available;
        },

        comparator: function(section) {
            return section.get('number');
        },

        findSectionName: function(number) {
            var matches = this.where({number: number});
            return matches.length ? matches[0].get('name') : '';
        },

        findLanguageName: function(id) {
            for (var i = 0; i < this.length; i++) {
                var section = this.at(i);
                for (var j = 0; j < section.get('languages').length; j++) {
                    var language = section.get('languages')[j];
                    if (language.id == id) {
                        return language.name;
                    }
                }
            }

            return '';
        }
    });

    /**
     * Subscription section model
     */
    var SubscriptionSection = Backbone.Model.extend({
        initialize: function() {
            this.set('section_number', this.get('section').number);
            this.set('language_id', this.get('language') ? this.get('language').id : null);
        },

        validate: function(attr) {
            if (attr.days < 0) {
                throw <?php echo json_encode($translator->trans("Days must be number", array(), 'user_subscriptions')); ?>;
            }
        },

        defaults: {
            subscription: <?php echo json_encode($this->subscription->getId()); ?>
        }
    });

    /**
     * Subscription section collection
     */
    var SubscriptionSectionCollection = Backbone.Collection.extend({
        model: SubscriptionSection,
        url: <?php echo json_encode($this->url(array('module' => 'admin', 'controller' => 'subscription-section-rest'), 'rest')); ?>,

        comparator: function(section) {
            return section.get('section').number;
        }
    });

    /**
     * Section row view
     */
    var SectionView = Backbone.View.extend({
        tagName: 'tr',
        template: _.template($('#section-row-template').html()),

        events: {
            'click button.delete': 'delete',
            'blur input': 'update'
        },

        initialize: function() {
            this.model.bind('change', this.render, this);
        },

        render: function() {
            $(this.el).html(this.template(this.model.toJSON()));
            return this;
        },

        delete: function() {
            this.model.destroy();
            this.remove();
        },

        update: function(e) {
            var attributes = {};
            attributes[$(e.target).attr('name')] = $(e.target).val();
            this.model.save(attributes);
        }
    });

    /**
     * Section list view
     */
    var TableView = Backbone.View.extend({
        template: _.template($('#table-view-template').html()),

        initialize: function() {
            this.collection.bind('remove', this.render, this);
            this.collection.bind('add', this.render, this);
        },

        render: function() {
            $(this.el).html(this.template());

            var tbody = $(this.el).find('tbody').empty();
            this.collection.each(function(section) {
                var view = new SectionView({model: section});
                tbody.append(view.render().el);
            });

            return this;
        }
    });

    /**
     * Section edit view
     */
    var EditView = Backbone.View.extend({
        template: _.template($('#edit-view-template').html()),

        events: {
            'change #language_set': 'setSections',
            'click button.save': 'save',
            'click button.cancel': 'cancel'
        },

        render: function() {
            $(this.el).html(this.template());
            this.setSections();
            return this;
        },

        setSections: function() {
            var language_set = $(this.el).find('#language_set').val();
            var sections = $(this.el).find('#sections').empty();
            var availableSections = window.sections.availableSections(this.collection, language_set);
            _.each(availableSections, function(section) {
                var text = [section.get('number'), section.get('name')];
                var id = [section.get('number')];
                if (language_set == 'select') {
                    text.push('(' + section.get('language').name + ')');
                    id.push(section.get('language').id);
                } else if (sections.find('option[value="' + section.get('number') + '"]').size()) {
                    return;
                }

                $('<option />').val(id.join(':')).text(text.join(' ')).appendTo(sections);
            });
        },

        save: function() {
            var days = $(this.el).find('#days').val();
            var start = $(this.el).find('#start').val();
            var collection = this.collection;
            $(this.el).find('select[name="sections"] > option:selected').each(function() {
                var number = parseInt($(this).val().split(':', 2)[0]);
                var language = parseInt($(this).val().split(':', 2)[1]) || null;

                if (language == null) {
                    var matches = collection.where({section_number: number});
                    for (var i = 0; i < matches.length; i++) {
                        collection.get(matches[i].id).destroy();
                    }
                }

                try {
                    collection.create({
                        section: {
                            number: number,
                        },
                        language: language ? {
                            id: language,
                        } : null,
                        days: days,
                        startDate: start,
                        paidDays: days
                    }, {wait: true});
                    window.router.navigate('', true);
                } catch (err) {
                    alert(err);
                }
            });
        },

        cancel: function() {
            window.router.navigate('', true);
        }
    });

    var EditAllView = Backbone.View.extend({
        events: {
            'click button.save': 'save',
            'click button.cancel': 'cancel'
        },

        template: _.template($('#edit-all-view-template').html()),

        render: function() {
            $(this.el).html(this.template());
            return this;
        },

        save: function(e) {
            var start = $(this.el).find('#start-date').val();
            var days = parseInt($(this.el).find('#days').val());
            var paidDays = parseInt($(this.el).find('#paid-days').val());
            this.collection.each(function(section) {
                section.save({
                    startDate: start,
                    days: days,
                    paidDays: paidDays
                });
            });
            window.router.navigate('', true);
        },

        cancel: function() {
            window.router.navigate('', true);
        }
    });

    var Workspace = Backbone.Router.extend({
        routes: {
            'section/new': 'edit',
            'section/:id': 'edit',
            'sections': 'edit-all',
            '': 'index'
        },

        initialize: function() {
            this.tableView = new TableView({collection: window.subscriptionSections});
        },

        index: function() {
            $('#app').html(this.tableView.render().el);
        },

        edit: function(id) {
            var view = new EditView({collection: window.subscriptionSections});
            $('#app').html(view.render().el);
        },

        'edit-all': function() {
            if (window.subscriptionSections.length == 0) {
                this.navigate('', {trigger: true});
                return;
            }

            var view = new EditAllView({collection: window.subscriptionSections});
            $('#app').html(view.render().el);
        }
    });

    $(function() {
        window.subscriptionSections = new SubscriptionSectionCollection(<?php echo json_encode(array_map(array($this, 'subscriptionSectionJson'), $this->subscription->getSections()->toArray())); ?>);
        window.sections = new SectionCollection(<?php echo json_encode($this->sections); ?>);
        window.router = new Workspace();
        Backbone.history.start();
    });
})(jQuery);
</script>
