<?php
global $g_ado_db;

// if you don't want to setup permissions the proper way, just uncomment the following PHP line
// read http://symfony.com/doc/current/book/installation.html#configuration-and-setup for more information
//umask(0000);

set_time_limit(0);
define('APPLICATION_ENV', 'cli');

require_once __DIR__ . '/../constants.php';
require_once __DIR__ . '/bootstrap.php.cache';
require_once __DIR__ . '/AppKernel.php';

use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;

$input = new ArgvInput();
$env = $input->getParameterOption(array('--env', '-e'), getenv('SYMFONY_ENV') ?: 'prod');
$debug = getenv('SYMFONY_DEBUG') !== '0' && !$input->hasParameterOption(array('--no-debug', '')) && $env !== 'prod';

if ($debug) {
    Debug::enable();
}

$kernel = new AppKernel($env, $debug);
$cli = new Application($kernel);

$kernel->boot();
$container = $kernel->getContainer();
\Zend_Registry::set('container', $container);

$g_ado_db = $container->getService('doctrine.adodb');

if (!$g_ado_db->isConnected(true)) {
    throw new \Exception("Container is missing", 1);
}

$cli->setCatchExceptions(false);

$cli->addCommands(array(
    new \Newscoop\Tools\Console\Command\UpdateIngestCommand(),
    new \Newscoop\Tools\Console\Command\LogMaintenanceCommand(),
    new \Newscoop\Tools\Console\Command\SendStatsCommand(),
    new \Newscoop\Tools\Console\Command\UpdateImageStorageCommand(),
    new \Newscoop\Tools\Console\Command\UpdateAutoloadCommand(),
    new \Newscoop\Tools\Console\Command\UpdateIndexCommand(),
    new \Newscoop\Tools\Console\Command\ResetIndexCommand(),
    new \Newscoop\Tools\Console\Command\InstallPluginCommand(),
    new \Newscoop\Tools\Console\Command\RemovePluginCommand(),
    new \Newscoop\Tools\Console\Command\UpdatePluginCommand(),
));

$cli->run($input);